buildscript {

    ext {
        springBootVersion = '1.3.2.RELEASE'
//        kotlinVersion = '1.0.0'
        kotlinVersion = '1.0.0-beta-4589'
        // see https://repo1.maven.org/maven2/org/jetbrains/kotlin/kotlin-stdlib/ for version updates...
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.asciidoctor:asciidoctor-gradle-plugin"
    }
}

plugins {
    id "org.asciidoctor.convert" version "1.5.2"
}


apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'spring-boot'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'org.asciidoctor.convert'

jar {
    baseName = ''
    version = '0.2.0-SNAPSHOT-201608230846'

    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

allprojects {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
check.dependsOn jacocoTestReport

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()

    // due to restdocs SNAPSHOT workaround (see below)
    maven {
        url 'http://repo.spring.io/snapshot'
    }

    maven {
        url "https://alvch.artifactoryonline.com/alvch/third-party"
        credentials {
            username alvchUsername
            password alvchPassword
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"

    // jackson-module-kotlin is required for handling immutable objects (e.g. without typical java bean setters)
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:${dependencyManagement.compile.importedProperties['jackson.version']}"

    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-data-rest"
    compile "org.springframework.boot:spring-boot-devtools"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "joda-time:joda-time:2.3"
    compile "org.jadira.usertype:usertype.core:3.0.0.CR3"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.2.1"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda"

    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "org.springframework.security:spring-security-test:4.0.0.RELEASE"

    testCompile "junit:junit"
    testCompile "com.jayway.jsonpath:json-path:1.1.0"
    testCompile "org.glassfish:javax.json:1.0.4"
//    testCompile "org.springframework.restdocs:spring-restdocs-mockmvc:1.0.0.RC1"
    // error java.lang.IllegalAccessError with 1.0.0 RC1
    testCompile "org.springframework.restdocs:spring-restdocs-mockmvc:1.0.2.BUILD-SNAPSHOT"

    runtime "org.hsqldb:hsqldb"
    runtime "com.oracle:ojdbc7:12.1.0.1"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

ext {
    snippetsDir = file('build/generated-snippets')
    host='test-api.job-room.ch'
    basePath='/api/v0.2'
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    attributes 'snippets': snippetsDir
    attributes 'base-url': host + basePath
    inputs.dir snippetsDir
    dependsOn test
}

processResources {
    filesMatching('**/*.properties') { expand([
            host: host,
            basePath: basePath
    ])}
}

processTestResources {
    filesMatching('**/*.properties') { expand([
            host: host,
            basePath: basePath
    ])}
}